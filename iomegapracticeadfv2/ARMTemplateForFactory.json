{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "iomegapracticeadfv2"
		},
		"BlobStorageConnectionForPolybase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorageConnectionForPolybase'"
		},
		"SQLDatabaseForAWLT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLDatabaseForAWLT'"
		},
		"SQLDatawarehouseForAdventureworksLT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLDatawarehouseForAdventureworksLT'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/databaseLookupAndExecute')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES \nWHERE TABLE_TYPE = 'BASE TABLE' and \n\tTABLE_SCHEMA = 'SalesLT' and \n\tTABLE_NAME <> 'ProductModel'"
							},
							"dataset": {
								"referenceName": "SQLDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "processCurrentTable",
								"type": "PipelineReference"
							},
							"parameters": {
								"tableList": {
									"value": "@activity('Lookup1').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDataset')]",
				"[concat(variables('factoryId'), '/pipelines/processCurrentTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/processCurrentTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IterateAllTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Curent Table to DW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM [@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "TRUNCATE TABLE [@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]",
												"type": "Expression"
											},
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "BlobStorageConnectionForPolybase",
												"type": "LinkedServiceReference"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQLDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLDatawarehouseTable",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "[concat('[', '@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]')]",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"tableList": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDataset')]",
				"[concat(variables('factoryId'), '/datasets/SQLDatawarehouseTable')]",
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageConnectionForPolybase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDatabaseForAWLT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "DummyTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDatabaseForAWLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDatawarehouseTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDatawarehouseForAdventureworksLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDatawarehouseForAdventureworksLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorageConnectionForPolybase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorageConnectionForPolybase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDatabaseForAWLT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLDatabaseForAWLT_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDatawarehouseForAdventureworksLT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('SQLDatawarehouseForAdventureworksLT_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}